#!/usr/bin/env bash

if [ "$(uname)" == "Darwin" ]; then
    # Mac: Get host address
    export XDEBUG_HOST=$(ipconfig getifaddr en0)
else
    # Linux: Get host address
    export XDEBUG_HOST=$(/sbin/ifconfig docker0 | grep "inet addr" | cut -d ':' -f 2 | cut -d ' ' -f 1)
fi

# Environment variables
export APP_NGINX_DOMAIN=${APP_NGINX_DOMAIN:-promas.api.dev.local.com}

export CONTAINER_NGINX_NAME=${CONTAINER_NGINX_NAME:-container.wagtaillearning.nginx.dev.local.com}
export CONTAINER_API_NAME=${CONTAINER_API_NAME:-container.wagtaillearning.api.dev.local.com}
export CONTAINER_POSTGIS_NAME=${CONTAINER_POSTGIS_NAME:-container.wagtaillearning.postgis.dev.local.com}
export CONTAINER_REDIS_NAME=${CONTAINER_REDIS_NAME:-container.wagtaillearning.redis.dev.local.com}
export CONTAINER_FLOWER_NAME=${CONTAINER_FLOWER_NAME:-container.wagtaillearning.flower.dev.local.com}
export CONTAINER_PGADMIN_NAME=${CONTAINER_PGADMIN_NAME:-container.wagtaillearning.pgadmin.dev.local.com}
export CONTAINER_PGADMIN_DEFAULT_EMAIL=${CONTAINER_PGADMIN_DEFAULT_EMAIL:-admin@gmail.com}
export CONTAINER_PGADMIN_DEFAULT_PASSWORD=${CONTAINER_PGADMIN_DEFAULT_PASSWORD:-admin}

export DB_ROOT_PASS=${DB_ROOT_PASS:-apiroot}
export DB_NAME=${DB_NAME:-dev}
export DB_USER=${DB_USER:-apilocal}
export DB_PASS=${DB_PASS:-apilocal}

export TZ=${TZ:-UTC}


# Users of the docker containers
DOCKER_USER_APP="www-data"


IMAGE_PYTHON_BASE_NAME="wagtaillearning-api-base"
IMAGE_PYTHON_API_NAME="wagtaillearning-api-wagtail"
IMAGE_POSTGIS_NAME="wagtaillearning-api-postgis"

export IMAGE_PYTHON_BASE_NAME=${IMAGE_PYTHON_BASE_NAME}
export IMAGE_PYTHON_API_NAME=${IMAGE_PYTHON_API_NAME}
export IMAGE_POSTGIS_NAME=${IMAGE_POSTGIS_NAME}


# If not exist image base
if [[ "$(docker images -q $IMAGE_PYTHON_BASE_NAME 2> /dev/null)" == "" ]]; then
  echo "Docker image build $IMAGE_PYTHON_BASE_NAME start."
  docker image build . -t $IMAGE_PYTHON_BASE_NAME -f Dockerfiles/dev/DockerfileWagtailBase
  echo "Docker image build $IMAGE_PYTHON_BASE_NAME success."
else
  echo "Docker image $IMAGE_PYTHON_BASE_NAME exist."
fi


if [[ "$(docker images -q $IMAGE_POSTGIS_NAME 2> /dev/null)" == "" ]]; then
  echo "Docker image build $IMAGE_POSTGIS_NAME start."
  docker image build . -t $IMAGE_POSTGIS_NAME -f Dockerfiles/dev/DockerfileDB
  echo "Docker image build $IMAGE_POSTGIS_NAME success."
else
  echo "Docker image $IMAGE_POSTGIS_NAME exist."
fi

if [[ "$(docker images -q $IMAGE_PYTHON_API_NAME 2> /dev/null)" == "" ]]; then
  echo "Docker image build $IMAGE_PYTHON_API_NAME start."
  docker image build . -t $IMAGE_PYTHON_API_NAME -f Dockerfiles/dev/DockerfileWagtail
  echo "Docker image build $IMAGE_PYTHON_API_NAME success."
else
  echo "Docker image $IMAGE_PYTHON_API_NAME exist."
fi

COMPOSE="docker-compose -f Dockerfiles/dev/docker-compose-dev.yml"

echo "Docker compose build docker-compose-dev.yml"
$COMPOSE build

echo "Docker compose up docker-compose-dev.yml"
$COMPOSE up